---

  - hosts: nodes
    become: yes
    become_user: root
    remote_user: centos

    tasks:
      - name: Create directory for ssh-keys
        file: state=directory mode=0700 dest=/root/.ssh/

      - name: Adding rsa-key in /root/.ssh/authorized_keys
        copy: src=~/.ssh/id_rsa.pub dest=/root/.ssh/authorized_keys owner=root mode=0600
        ignore_errors: yes

      - name: Checking DNS
        command: host -t A google.com

      - name: Installing tools
        yum: >
          name={{ item }}
          state=present
          update_cache=yes
        with_items:
          - git
          - curl

      - name: Add docker repository
        command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

      - name: Installing docker package
        yum: >
          name={{ item }}
          state=present
          update_cache=yes
        with_items:
          - docker-ce
          - docker-ce-cli
          - containerd.io

      - name: Enable docker daemon
        systemd:
          name: docker
          state: started
          enabled: yes

      - name: Install docker-compose
        raw: $(curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/bin/docker-compose && chmod +x /usr/bin/docker-compose)

      - name: Synchronization
        copy:
          src: stack/
          dest: "/opt/stack/"
          owner: root
          group: root
          mode: 0644
        become: true

      - name: Pull all images in compose node01
        when: inventory_hostname in groups['manager']
        command: docker-compose -f /opt/stack/docker-compose.yaml pull
#        delegate_to: "{{ item }}"
#        delegate_facts: true
#        loop: "{{ groups['manager'] }}"

      - name: Up all services in compose node01
        when: inventory_hostname in groups['manager']
        command: docker-compose -f /opt/stack/docker-compose.yaml up -d
#        delegate_to: "{{ item }}"
#        delegate_facts: true
#        loop: "{{ groups['manager'] }}"

      - name: Pull all images in compose node02
        when: inventory_hostname in groups['mygroup']
        command: docker-compose -f /opt/stack/exporters/docker-compose.exporters.yaml pull
#        delegate_to: "{{ item }}"
#        delegate_facts: true
#        loop: "{{ groups['mygroup'] }}"

      - name: Up all services in compose node02
        when: inventory_hostname in groups['mygroup']
        command: docker-compose -f /opt/stack/exporters/docker-compose.exporters.yaml up -d
#        delegate_to: "{{ item }}"
#        delegate_facts: true
#        loop: "{{ groups['mygroup'] }}"
